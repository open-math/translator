{
  "version": 3,
  "sources": ["../../content/global/script/index.ts", "../../content/block/image/script.ts", "../../content/block/accentBlock/script.ts", "../../content/block/gallery/script.ts", "../../content/inliner/link/script.ts", "../../content/block/task/script.ts"],
  "sourcesContent": ["import { init as image } from \"content/block/image/script\";\r\nimport { init as accentBlock } from \"content/block/accentBlock/script\";\r\nimport { init as gallery } from \"content/block/gallery/script\";\r\nimport { init as link } from \"content/inliner/link/script\";\r\nimport { init as task} from \"content/block/task/script\";\r\n\r\nexport type ContentOptions = {\r\n    vendor: {\r\n        photoSwipe: { [key: string]: string }\r\n    }\r\n};\r\n\r\n//\r\n//\r\n//\r\n\r\nlet products = [\r\n    image,\r\n    accentBlock,\r\n    gallery,\r\n    link,\r\n    task,\r\n];\r\n\r\nexport function initProducts(contentElem: HTMLElement, gOptions: ContentOptions = {} as ContentOptions)\r\n{\r\n    products.forEach(product => product(contentElem, gOptions));\r\n}", "import type { ContentOptions } from \"content/global/script\";\r\n\r\ndeclare let PhotoSwipe, PhotoSwipeLightbox, PhotoSwipeDynamicCaption;\r\n\r\nexport function init(contentElem: HTMLElement, options: ContentOptions)\r\n{\r\n    contentElem.querySelectorAll('.image').forEach(imgElem => initPhotoSwipeIn(imgElem, options?.vendor?.photoSwipe));\r\n}\r\n\r\nfunction initPhotoSwipeIn(imgElement: Element, phrases)\r\n{\r\n    let animDuration = 250;\r\n\r\n    let options = {\r\n        wheelToZoom: true,\r\n        bgOpacity: .9,\r\n        showAnimationDuration: animDuration,\r\n        hideAnimationDuration: animDuration,\r\n    }\r\n\r\n    let lightbox = new PhotoSwipeLightbox({\r\n        gallery: imgElement,\r\n        children: 'a[data-pswp-single]',\r\n        pswpModule: PhotoSwipe,\r\n        ...options,\r\n        ...phrases\r\n    });\r\n\r\n    lightbox.on('contentAppend', function (e) {\r\n        let isInvertible = lightbox.pswp.currSlide.data.element.querySelector('img').hasAttribute('data-invertible');\r\n\r\n        if (isInvertible)\r\n            e.content.element.setAttribute('data-invertible', '');\r\n    });\r\n\r\n    let plugin = new PhotoSwipeDynamicCaption(lightbox, {\r\n        type: 'below',\r\n        captionContent: (slide) => {\r\n            let caption = slide.data.element.closest('.image').querySelector(':scope > .caption');\r\n\r\n            if (!caption)\r\n                return '';\r\n            \r\n            return caption.innerHTML;\r\n        }\r\n    });\r\n\r\n    lightbox.init();\r\n}", "export function init(contentElem: HTMLElement)\r\n{\r\n    contentElem.querySelectorAll('.accentBlock').forEach(abElement =>\r\n    {\r\n        let expandButton = abElement.querySelector(':scope > .side > .expand');\r\n        if (expandButton)\r\n            expandButton.addEventListener('click', () => abElement.toggleAttribute('data-expand-open'));\r\n    });\r\n}", "class Gallery\r\n{\r\n    selectorImages: NodeListOf<Element>;\r\n    displayImages: NodeListOf<Element>;\r\n\r\n    constructor(root: Element)\r\n    {\r\n        this.selectorImages = root.querySelectorAll(':scope > .selector > .inner > .image');\r\n        this.displayImages = root.querySelectorAll(':scope > .display > .displayImage');\r\n\r\n        this.selectorImages.forEach((sImg, i) => sImg.addEventListener('click', () =>\r\n        {\r\n            this.selectorImages.forEach(_sImg => _sImg.removeAttribute('data-current'));\r\n            sImg.setAttribute('data-current', '');\r\n\r\n            this.displayImages.forEach(dImg => dImg.removeAttribute('data-current'));\r\n            this.displayImages[i].setAttribute('data-current', '');\r\n        }));\r\n\r\n        let startNum = parseFloat(root.getAttribute('data-start')) - 1;\r\n        \r\n        if (startNum < 0) startNum = 0;\r\n        if (startNum > this.selectorImages.length - 1) startNum = this.selectorImages.length - 1;\r\n\r\n        let startImg = this.selectorImages[startNum] as HTMLElement;\r\n        if (startImg)\r\n            startImg.click();\r\n    }\r\n}\r\n\r\nexport function init(contentElem: HTMLElement)\r\n{\r\n    contentElem.querySelectorAll('.gallery').forEach(galleryElem => new Gallery(galleryElem));\r\n}", "declare let OMathEvent;\r\n\r\nexport function init(contentElem: HTMLElement)\r\n{\r\n    contentElem.querySelectorAll('a.link').forEach(link =>\r\n    {\r\n        let timeout;\r\n        let canOpenLink = false;\r\n\r\n        link.addEventListener('click', (e) =>\r\n        {\r\n            if (canOpenLink || !link.hasAttribute('data-preview'))\r\n                return;\r\n\r\n            e.preventDefault();\r\n\r\n            clearTimeout(timeout);\r\n            canOpenLink = true;\r\n            timeout = setTimeout(() => { canOpenLink = false; }, 300);\r\n\r\n            // Preview\r\n\r\n            OMathEvent.onLinkClick(link, e);\r\n        });\r\n    });\r\n}", "export function init(contentElem: HTMLElement)\r\n{\r\n    contentElem.querySelectorAll('.task').forEach(task =>\r\n    {\r\n        task.querySelectorAll(':scope > header > .controls > button').forEach(button =>\r\n        {\r\n            button.addEventListener('click', () =>\r\n            {\r\n                task.toggleAttribute(`data-${button.getAttribute('data-section')}-open`);\r\n            });\r\n        });\r\n    });\r\n}"],
  "mappings": "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",
  "names": ["init", "init", "init", "init", "init"]
}
