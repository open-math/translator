@use 'def/ab';
@use 'def/bp';
@use 'def/size';
@use 'include/util';

[data-content]
{
    .accentBlock
    {
        $sideSize: 30px;

        //

        display: flex;

        ab-strong
        {
            font-weight: bold;
            color: var(--_ab-color);
        }

        > .side
        {
            display: flex;
            flex-direction: column;
            
            // Overlap expand title bullet points
            position: relative;
            z-index: 1;
            // -/

            > *
            {
                @include util.flexCC;
                @include util.size($sideSize);
            }

            > .type
            {
                cursor: help;

                font-size: 16px;
                color: white;
                background: var(--_ab-color);

                > i::before
                {
                    font-family: "OMath-Content-Icons";
                    font-style: normal;
                    position: relative;
                    top: 1px;
                    content: var(--_ab-icon);
                }
            }

            > .expand
            {
                position: relative;
                cursor: pointer;

                font-size: 18px;
                color: var(--_ab-color);

                border: 2px solid var(--_ab-color);

                &:hover
                {
                    > .bgOverlay
                    {
                        opacity: .15;
                    }
                }

                > .bgOverlay
                {
                    position: absolute;
                    left: 0; top: 0;
                    @include util.size(100%);

                    background: var(--_ab-color);
                    opacity: 0;

                    @include util.transition(opacity);
                }

                > i
                {
                    transform: rotate(180deg);
                    @include util.transition(transform);
                }
            }
        }

        > .base
        {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: center;
            overflow: hidden;

            position: relative;
            left: -2px;

            > .main,
            > .expand
            {
                border-left: 2px solid var(--_ab-color);

                > section
                {
                    > .title
                    {
                        padding-left: size.$gap;
                        padding-bottom: size.$gapSmall;
                        color: var(--_ab-color);
                    }

                    > [data-content]
                    {
                        padding: 0;
                        padding-left: size.$gap;
                        > *:not(:last-child) { margin-bottom: size.$gap; }
                    }
                }
                
            }

            > .main
            {
                > section > .title
                {
                    font-weight: bold;
                    padding-bottom: calc(size.$gapSmall - 1px);
                }
            }

            > .expand
            {
                border-left-style: dashed;

                > section > .title
                {
                    padding-top: size.$gap;
                    position: relative;
                    font-weight: 600;

                    &::before
                    {
                        content: "";

                        width: 0px;
                        height: 0px;
                        border-style: solid;
                        border-width: 15px 0 15px 20px;
                        border-color: transparent transparent transparent var(--_ab-color);
                        transform: rotate(0deg);

                        position: absolute;
                        top: 14px;
                        left: -13px;
                    }
                }
            }
        }

        // Expand logic

        &:not([data-expand-open])
        {
            > .base > .expand
            {
                height: 0;
                overflow: hidden;
            }
        }

        &[data-expand-open]
        {
            > .side > .expand > i
            {
                transform: rotate(0);
            }
        }

        // Mini layout

        @include bp.max(mini)
        {
            flex-direction: column;

            > .side
            {
                flex-direction: row;
            }

            > .base
            {
                left: 0;

                > .main
                {
                    padding-top: size.$gapSmall;
                }

                > .expand > section > .title::before
                {
                    top: 12px;
                }
            }
        }

        // Theme

        @each $type in ab.getTypes()
        {
            &[data-type=#{$type}]
            {
                --_ab-color: var(--c_ab-#{$type});
                --_ab-icon: #{ab.getIconCode($type)};
            }
        }

        &[data-type=important] > .side > .type  { font-size: 20px; }
    }
}