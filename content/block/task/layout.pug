mixin task(task, isSimilar)
    .task(
        id= isSimilar ? task.id : null,
        class= isSimilar ? task.classes : null,
        class= task.script ? 'genTask' : null,
        data-hint-open= isEditor,
        data-solution-open= isEditor,
        data-answer-open= isEditor,
        data-similar-open= isEditor,
        data-script-id= task.scriptId ? task.scriptId : null,
        data-script= task.script ? task.script : null
    )
        header
            if (isSimilar)
                i.ic-clone.analogIcon

            .info
                .title!= task.title
                
                if (isSimilar)
                    .desc= i18n('task.similarNum') + ' ' + task.num

                if (tags)
                    .tags
                        each tag in task.tags
                            .tag!= tag
            
            - let sectionNames = Object.keys(task.sections);

            if (sectionNames.length > 0 || similar)
                .controls
                    each sectionName in sectionNames
                        button(data-section= sectionName, title= i18n(`task.${sectionName}`))
                            i

                    if (task.similar)
                        button(data-section="similar", title= i18n(`task.similar`))
                            i

                    if (task.script)
                        button.generate(title= i18n('task.generate'))
                            i.ic-arrows-rotate

        .statement!= task.statement

        each content, name in task.sections
            section(data-name= name)
                .inner
                    header
                        i
                        span= i18n(`task.${name}`)
                    .content!= content

.taskHolder
    +task(locals)

    if (similar)
        .similarTasks
            .inner
                each sTask, i in similar
                    +task(sTask, true)